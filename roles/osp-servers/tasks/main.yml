---
# tasks file for osp.servers
- name: Copy public key to workstation
  copy:
    content: |
      {% for line in lookup('file', osp_key.public).split('\n') %}
      {% if '#' not in line %}{{ line }}{% endif %}
      {% endfor %}
    dest: "{{ osp_key.public }}"
    mode: u+r

- name: Create keypair for servers to use
  os_keypair:
    cloud: "{{ osp_cloud }}"
    state: present
    name: "{{ osp_key.name }}"
    public_key_file: "{{ osp_key.public }}"

- name: Create new server instances and attaches them a network and passes metadata to the instance
  os_server:
    cloud: "{{ osp_cloud }}"
    state: present
    name: "{{ item.name }}"
    meta: "{{ item.meta }}"
    flavor: "{{ item.flavor }}"
    key_name: "{{ osp_key.name }}"
    nics:
    - net-name: "{{ osp_network.internal.name }}"
    image: "{{ item.image }}"
    security_groups: "{{ item.security_group }}"
  loop: "{{ osp_servers }}"

- name: Add floating IP to Servers
  os_floating_ip:
    cloud: "{{ osp_cloud }}"
    state: present
    server: "{{ item.name }}"
    network: "{{ osp_network.external.name }}"
    reuse: yes
    wait: yes
    timeout: 180
  loop: "{{ osp_servers }}"
  register: ip_assign

- name: Add floating IPs to temp inventory
  add_host:
    name: "{{ item }}"
    group: workstation
    ansible_user: cloud-user
    ansible_ssh_private_key_file: "{{ osp_key.private }}"
  loop: "{{ ip_assign | json_query('results[*].floating_ip.floating_ip_address') }}"
  delegate_to: localhost

- name: Wait for servers to be available
  wait_for_connection:
