---
# tasks file for osp.servers
- name: Get public key
  get_url:
    url: "{{ osp_key.location }}"
    dest: /tmp/{{ osp_key.name }}.pub

- name: Create keypair for servers to use
  os_keypair:
    cloud: "{{ osp_cloud }}"
    state: present
    name: "{{ osp_key.name }}"
    public_key_file: /tmp/{{ osp_key.name }}.pub

- name: Create new server instances and attaches them a network and passes metadata to the instance
  os_server:
    cloud: "{{ osp_cloud }}"
    state: present
    name: "{{ item.name }}"
    meta: "{{ item.meta }}"
    flavor: "{{ item.flavor }}"
    key_name: "{{ osp_key.name }}"
    nics:
    - net-name: "{{ osp_network.internal.name }}"
    image: "{{ item.image }}"
    security_groups: "{{ item.security_group }}"
  loop: "{{ osp_servers }}"

- name: Add floating IP to Servers
  os_floating_ip:
    cloud: "{{ osp_cloud }}"
    state: present
    server: "{{ item.name }}"
    network: "{{ osp_network.external.name }}"
    reuse: yes
    wait: yes
    timeout: 180
  loop: "{{ osp_servers }}"
  register: ip_assign

- name: Wait for servers to offer SSH
  wait_for:
    port: 22
    host: '{{ item }}'
    search_regex: OpenSSH
  loop: "{{ ip_assign | json_query('results[*].floating_ip.floating_ip_address') }}"

- name: Get yum repo
  get_url:
    url: "{{ repo_location }}"
    dest: /tmp/internal.repo

- name: Setup yum repo
  vars:
    ansible_host: "{{ item }}"
  copy:
    src: /tmp/internal.repo
    dest: /etc/yum.repos.d/internal.repo
  loop: "{{ ip_assign | json_query('results[*].floating_ip.floating_ip_address') }}"
  